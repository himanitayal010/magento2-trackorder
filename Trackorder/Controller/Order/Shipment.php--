<?php

namespace Magneto\Trackorder\Controller\Order;

use Magento\Framework\Controller\ResultFactory;

class Shipment extends \Magento\Framework\App\Action\Action
{
  protected $resultPageFactory;

  protected $_orderCollectionFactory;

  protected $_order;

  public function __construct(
        \Magento\Framework\App\Action\Context $context,
        \Magento\Framework\View\Result\PageFactory $resultPageFactory,
        \Magento\Sales\Model\ResourceModel\Order\CollectionFactory $orderCollectionFactory,
        \Magento\Store\Model\StoreManagerInterface $storeManager,
        \Magento\Framework\UrlInterface $urlInterface, 
        \Magento\Sales\Api\Data\OrderInterface $order
    ) {
        $this->resultPageFactory = $resultPageFactory;
        $this->_orderCollectionFactory = $orderCollectionFactory;
        $this->_storeManager = $storeManager;
        $this->_urlInterface = $urlInterface;
        $this->_order = $order;
        parent::__construct($context);
    }
    public function execute()
    {
        $track = $this->getRequest()->getPost('track');

          if (!empty($track['order_id']) && !empty($track['customer_email'])) {

              $trackorder_id = $track['order_id'];

              $trackuser_email = $track['customer_email'];

              $order_detail = $this->_order->loadByIncrementId($trackorder_id);

              $objectManager = \Magento\Framework\App\ObjectManager::getInstance();
              $order = $objectManager->create('Magento\Sales\Model\Order')->loadByIncrementId($order_detail['increment_id']);
              $orderItems = $order->getAllItems();
                
              if($order_detail['customer_email'] == $trackuser_email){

                $order_method = $order_detail->getTracksCollection();  
                
                $trackData = array();
                $html = $orderifohtml = "";

                $orderifohtml = "<ul><li><span>". __('Order ID #') ."<b><p id='orderid'> ".$trackorder_id." </p></b></span></li></ul><table><tr><strong><th>Product Name</th><th>SKU</th><th>Qty</th><th>Status</th><th>Tracking</th></strong></tr>";
                $trackNumber = 'Not Available';
                foreach ($orderItems as $item) {
                  $itemId = $item->getItemId();
                  if($item->getParentItemId() == ''){
                    $sales_track = $objectManager->get('Magento\Sales\Model\ResourceModel\Order\Shipment\Track\Collection')->addFieldToFilter('order_id', $order_detail['entity_id']);
                    $status = 'Ordered';
                    $model = $objectManager->get('\Magneto\OrderUpdate\Model\ResourceModel\OrderUpdate\Collection')->addFieldToFilter('order_id', $order_detail['entity_id']);
                    if($sales_track->getSize()){
                      foreach($sales_track as $track){
                        $parentId = $track->getParentId();
                        $trackNumber = $track->getTrackNumber();
                        $sales_item = $objectManager->get('Magento\Sales\Model\ResourceModel\Order\Shipment\Item\Collection');
                        if($sales_item->getSize())
                        {
                          foreach ($sales_item as $value) {
                            $parent = $value->getParentId();
                            $orderItemId = $value->getOrderItemId();
                            $itemQty = (int)$value->getQtyOrdered();
                            $trackLink = "<a href='https://www.delhivery.com/track/package/".$trackNumber."'> " . __('Click here') . " </a>";
                            if($model->getSize()){
                              foreach ($model as $values) {
                                if($values->getOrderItemId() == $itemId){ 
                                  $status = $values->getOrderedItemStatus();
                                  $itemQty = (int)$values->getProductQty();
                                  if($status == 'Refund Initiated'){
                                    $itemQty = (int)$value->getQtyRefunded();
                                    $trackLink = 'Not Available';
                                  }
                                  if($status == 'Cancelled - Refund Initiated'){
                                    $itemQty = (int)$value->getQtyRefunded();
                                    $trackLink = 'Not Available';
                                  }
                                  if($status == 'Cancelled'){
                                    $itemQty = (int)$value->getQtyCanceled();
                                    $trackLink = 'Not Available';
                                  }
                                  if($status == 'Return Request Placed'){
                                    $trackLink = 'Not Available';
                                  }
                                }
                              }
                            }else{
                              $status = 'Accepted';
                            }
                            if($itemQty == 0){
                              $itemQty = (int)$value->getQtyRefunded();
                              $status = 'Refunded';
                            }
                            if(($orderItemId == $item->getItemId()) && ($parent == $parentId))
                              $orderifohtml .= "<tr><td>".$item->getName()."</td><td>".$item->getSku()."</td><td>".$itemQty."</td><td>".$status."</td><td>".$trackLink."</td></tr>";
                            }
                        }
                      }
                    }else{
                      if($model->getSize()){
                        foreach ($model as $value) {
                          if($value->getOrderItemId() == $itemId){
                            $status = $value->getOrderedItemStatus();
                          }
                        }
                      }else{
                        $status = 'Ordered';
                      }
                      $orderifohtml .= "<tr><td>".$item->getName()."</td><td>".$item->getSku()."</td><td>".(int)$item->getQtyOrdered()."</td><td>".$status."</td><td>Not Available</td></tr>";
                    }
                  }
                }
                $orderifohtml .= "</table>";

                if(count($order_method)){
                  // foreach ($order_method as $trackingData) {
                  //   $html .="<tr><td><a href='https://www.delhivery.com/track/package/".$trackingData->getTrackNumber()."' target='_blank'>Track Order</a></td></tr>";   
                  // }
                  $success_message = __('We found a order detail #'.$order_detail['increment_id']);
                } else {
                  $success_message = __('Order #'. $order_detail['increment_id'] .' Not shipped yet');
                }
                $response  = array('trackData'=>$html, 'status' => true, 'emessage' => $success_message, 'orderdetailhtml' => $orderifohtml);                
              } else{
                  $error_message = __('No record found for the given details please check your Email or Order Id.');
                  $response =  array('status' => false, 'emessage' => $error_message);
              }

              $resultJson = $this->resultFactory->create(ResultFactory::TYPE_JSON);

              $resultJson->setData($response);

              return $resultJson;

        }

    }

}
